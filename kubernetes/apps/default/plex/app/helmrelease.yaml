---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex-beta
      tag: 1.32.6.7371-b6a09ad81@sha256:437685fa85bee0731f36610b473b807aad436ca2408815018002206f9abf6fe6
      pullPolicy: IfNotPresent
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/icon: "mdi:plex"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    volumeClaimTemplates:
      - name: config-plex
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 150Gi
        storageClass: longhorn
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: "192.168.1.5"
        path: /mnt/tank/media
        mountPath: /media
        readOnly: false
      transcode:
        enabled: true
        type: emptyDir
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
#    nodeSelector:
#      intel.feature.node.kubernetes.io/gpu: "true"
#      gputype: "power"
#    affinity:
#      podAntiAffinity:
#        requiredDuringSchedulingIgnoredDuringExecution:
#          - labelSelector:
#              matchExpressions:
#                - key: app.kubernetes.io/name
#                  operator: In
#                  values: ["sabnzbd"]
#            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 1Gi
      limits:
        gpu.intel.com/i915: 1
        memory: 6Gi
