---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: readarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/readarr-nightly
      tag: 0.3.10.2287@sha256:ae46e0be25950f3d90dfb50bbae8bb9c45e4ab1daa9bbe99bdf7054212a9c984
    env:
      TZ: "${TIMEZONE}"
      READARR__INSTANCE_NAME: Readarr
      READARR__PORT: &port 80
      READARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/icon: "mdi:book-arrow-down-outline"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 70Gi
        storageClass: longhorn
    persistence:
      media:
        enabled: true
        type: nfs
        server: "192.168.1.5"
        path: /mnt/tank/media
        mountPath: /media
        readOnly: false
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
